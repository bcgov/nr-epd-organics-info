name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      release:
        description: Deployment release; usually PR number, test or prod
        required: true
        type: string

      ### Typical / recommended
      autoscaling:
        description: Autoscaling enabled or not for the deployments
        required: false
        type: string
        default: 'true'
      environment:
        description: Environment name; omit for PRs
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        required: false
        type: string
        default: ${{ github.event.number }}
      triggers:
        description: Paths to trigger a deploy; omit=always; e.g. ('backend/' 'frontend/')
        required: false
        type: string

      ### Usually a bad idea / not recommended
      directory:
        description: "Chart directory"
        default: "charts/${{ github.event.repository.name }}"
        required: false
        type: string
      timeout-minutes:
        description: "Timeout minutes"
        default: 10
        required: false
        type: number
      values:
        description: "Values file"
        default: "values.yaml"
        required: false
        type: string
      params:
        description: "Extra parameters to pass to helm upgrade"
        default: ""
        required: false
        type: string


env:
  repo_release: ${{ github.event.repository.name }}-${{ inputs.release }}
  package_tag: ${{ inputs.tag }}

jobs:
  
  deploys:
    name: Helm
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - name: Stop pre-existing deployments on PRs (status = pending-upgrade)
        if: github.event_name == 'pull_request'
        uses: bcgov/action-oc-runner@v0.4.0
        with:
          oc_namespace: ${{ vars.oc_namespace }}
          oc_token: ${{ secrets.oc_token }}
          oc_server: ${{ vars.oc_server }}
          triggers: ${{ inputs.triggers }}
          commands: |
            # Interrupt any previous deployments (PR only)
            PREVIOUS=$(helm status ${{ env.repo_release }} -o json | jq .info.status || true)
            if [[ ${PREVIOUS} =~ pending ]]; then
              echo "Rollback triggered"
              helm rollback ${{ env.repo_release }} || \
                helm uninstall ${{ env.repo_release }}
            fi

      - name: Deploy
        uses: bcgov/action-oc-runner@v0.4.0
        with:
          oc_namespace: ${{ vars.oc_namespace }}
          oc_token: ${{ secrets.oc_token }}
          oc_server: ${{ vars.oc_server }}
          triggers: ${{ inputs.triggers }}
          commands: |
            # If directory provided, cd to it
            [ -z "${{ inputs.directory }}" ]|| cd ${{ inputs.directory }}
            # Deploy Helm Chart
            helm dependency update
            helm package --app-version="${{ env.package_tag }}" --version=${{ inputs.tag }} .

            helm upgrade \
              --set global.autoscaling=${{ inputs.autoscaling }} \
              --set-string global.repository=${{ github.repository }} \
              --set-string global.tag="${{ env.package_tag }}" \
              ${{ inputs.params }} \
              --install --wait --atomic  ${{ env.repo_release }} \
              --timeout ${{ inputs.timeout-minutes }}m \
              --values ${{ inputs.values }} \
              ./${{ github.event.repository.name }}-${{ inputs.tag }}.tgz

            # print history 
            helm history ${{ env.repo_release }}

            # Remove old build runs, build pods and deployment pods
            oc delete po --field-selector=status.phase==Succeeded
